{"version":3,"file":"umd.js","sources":["../src/JsonStreamStringify.js"],"sourcesContent":["import { Readable } from 'stream';\n\nconst rxEscapable = /[\\\\\"\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n\n// table of character substitutions\nconst meta = {\n  '\\b': '\\\\b',\n  '\\t': '\\\\t',\n  '\\n': '\\\\n',\n  '\\f': '\\\\f',\n  '\\r': '\\\\r',\n  '\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n};\n\nfunction isReadableStream(value) {\n  return typeof value.read === 'function'\n        && typeof value.once === 'function'\n        && typeof value.removeListener === 'function'\n        && typeof value._readableState === 'object';\n}\n\nfunction getType(value) {\n  if (!value) return 'Primitive';\n  if (typeof value.then === 'function') return 'Promise';\n  if (isReadableStream(value)) return `Readable${value._readableState.objectMode ? 'Object' : 'String'}`;\n  if (Array.isArray(value)) return 'Array';\n  if (typeof value === 'object' || value instanceof Object) return 'Object';\n  return 'Primitive';\n}\n\nconst stackItemEnd = {\n  Array: ']',\n  Object: '}',\n  ReadableString: '\"',\n  ReadableObject: ']',\n};\n\nconst stackItemOpen = {\n  Array: '[',\n  Object: '{',\n  ReadableString: '\"',\n  ReadableObject: '[',\n};\n\nfunction escapeString(string) {\n  // Modified code, original code by Douglas Crockford\n  // Original: https://github.com/douglascrockford/JSON-js/blob/master/json2.js\n\n  // If the string contains no control characters, no quote characters, and no\n  // backslash characters, then we can safely slap some quotes around it.\n  // Otherwise we must also replace the offending characters with safe escape\n  // sequences.\n\n  return string.replace(rxEscapable, (a) => {\n    const c = meta[a];\n    return typeof c === 'string' ? c : `\\\\u${a.charCodeAt(0).toString(16).padStart(4, '0')}`;\n  });\n}\n\nfunction quoteString(string) {\n  return `\"${escapeString(string)}\"`;\n}\n\nfunction readAsPromised(stream, size) {\n  const value = stream.read(size);\n  if (value === null) {\n    return new Promise((resolve, reject) => {\n      const endListener = () => resolve(null);\n      stream.once('end', endListener);\n      stream.once('error', reject);\n      stream.once('readable', () => {\n        stream.removeListener('end', endListener);\n        stream.removeListener('error', reject);\n        resolve(stream.read());\n      });\n    });\n  }\n  return Promise.resolve(value);\n}\n\nfunction recursiveResolve(promise) {\n  return promise.then((res) => {\n    const resType = getType(res);\n    return resType === 'Promise' ? recursiveResolve(res) : res;\n  });\n}\n\nclass JsonStreamStringify extends Readable {\n  constructor(value, replacer, spaces, cycle) {\n    super({});\n    let gap;\n    const spaceType = typeof spaces;\n    if (spaceType === 'string' || spaceType === 'number') {\n      gap = Number.isFinite(spaces) ? ' '.repeat(spaces) : spaces;\n    }\n    Object.assign(this, {\n      visited: cycle ? new WeakMap() : new WeakSet(),\n      cycle,\n      stack: [],\n      replacerFunction: replacer instanceof Function && replacer,\n      replacerArray: Array.isArray(replacer) && replacer,\n      gap,\n      depth: 0,\n    });\n    this.addToStack(value);\n  }\n\n  cycler(key, value) {\n    const existingPath = this.visited.get(value);\n    if (existingPath) {\n      return {\n        $ref: existingPath,\n      };\n    }\n    let path = this.path();\n    if (key !== undefined) path.push(key);\n    path = path.map(v => `[${(Number.isInteger(v) ? v : quoteString(v))}]`);\n    this.visited.set(value, path.length ? `$${path.join('')}` : '$');\n    return value;\n  }\n\n  addToStack(value, key, index, parent) {\n    let realValue = value;\n    if (this.replacerFunction) {\n      realValue = this.replacerFunction(key || index, realValue, this);\n    }\n    // ORDER?\n    if (realValue && realValue.toJSON instanceof Function) {\n      realValue = realValue.toJSON();\n    }\n    if (realValue instanceof Function || typeof value === 'symbol') {\n      realValue = undefined;\n    }\n    if (key !== undefined && this.replacerArray) {\n      if (!this.replacerArray.includes(key)) {\n        realValue = undefined;\n      }\n    }\n    let type = getType(realValue);\n    if (((parent && parent.type === 'Array') ? true : realValue !== undefined) && type !== 'Promise') {\n      if (parent && !parent.first) {\n        this._push(',');\n      }\n      /* eslint-disable-next-line no-param-reassign */\n      if (parent) parent.first = false;\n    }\n    if (realValue !== undefined && type !== 'Promise' && key) {\n      if (this.gap) {\n        this._push(`\\n${this.gap.repeat(this.depth)}\"${escapeString(key)}\": `);\n      } else {\n        this._push(`\"${escapeString(key)}\":`);\n      }\n    }\n    if (type !== 'Primitive') {\n      if (this.cycle) {\n        // run cycler\n        realValue = this.cycler(key || index, realValue);\n        type = getType(realValue);\n      } else {\n        // check for circular structure\n        if (this.visited.has(realValue)) {\n          throw Object.assign(new Error('Converting circular structure to JSON'), {\n            realValue,\n            key: key || index,\n          });\n        }\n        this.visited.add(realValue);\n      }\n    }\n\n    if (!key && index > -1 && this.depth && this.gap) this._push(`\\n${this.gap.repeat(this.depth)}`);\n\n    const open = stackItemOpen[type];\n    if (open) this._push(open);\n\n    const obj = {\n      key,\n      index,\n      type,\n      value: realValue,\n      parent,\n      first: true,\n    };\n\n    if (type === 'Object') {\n      this.depth += 1;\n      obj.unread = Object.keys(realValue);\n      obj.isEmpty = !obj.unread.length;\n    } else if (type === 'Array') {\n      this.depth += 1;\n      obj.unread = realValue.length;\n      obj.arrayLength = obj.unread;\n      obj.isEmpty = !obj.unread;\n    } else if (type.startsWith('Readable')) {\n      this.depth += 1;\n      if (realValue._readableState.ended) {\n        this.emit('error', new Error('Readable Stream has ended before it was serialized. All stream data have been lost'), realValue, key || index);\n      } else if (realValue._readableState.flowing) {\n        realValue.pause();\n        this.emit('error', new Error('Readable Stream is in flowing mode, data may have been lost. Trying to pause stream.'), realValue, key || index);\n      }\n      obj.readCount = 0;\n      realValue.once('end', () => {\n        obj.end = true;\n        this.__read();\n      });\n      realValue.once('error', (err) => {\n        this.error = true;\n        this.emit('error', err);\n      });\n    }\n    this.stack.unshift(obj);\n    return obj;\n  }\n\n  removeFromStack(item) {\n    const {\n      type,\n    } = item;\n    const isObject = type === 'Object' || type === 'Array' || type.startsWith('Readable');\n    if (type !== 'Primitive') {\n      if (!this.cycle) {\n        this.visited.delete(item.value);\n      }\n      if (isObject) {\n        this.depth -= 1;\n      }\n    }\n\n    const end = stackItemEnd[type];\n    if (isObject && !item.isEmpty && this.gap) this._push(`\\n${this.gap.repeat(this.depth)}`);\n    if (end) this._push(end);\n    const stackIndex = this.stack.indexOf(item);\n    this.stack.splice(stackIndex, 1);\n  }\n\n  _push(data) {\n    this.pushCalled = true;\n    this.push(data);\n  }\n\n  processReadableObject(current, size) {\n    if (current.end) {\n      this.removeFromStack(current);\n      return undefined;\n    }\n    return readAsPromised(current.value, size)\n      .then((value) => {\n        if (value !== null) {\n          if (!current.first) {\n            this._push(',');\n          }\n          /* eslint-disable no-param-reassign */\n          current.first = false;\n          this.addToStack(value, undefined, current.readCount);\n          current.readCount += 1;\n          /* eslint-enable no-param-reassign */\n        }\n      });\n  }\n\n  processObject(current) {\n    // when no keys left, remove obj from stack\n    if (!current.unread.length) {\n      this.removeFromStack(current);\n      return;\n    }\n    const key = current.unread.shift();\n    const value = current.value[key];\n    this.addToStack(value, key, undefined, current);\n  }\n\n  processArray(current) {\n    const key = current.unread;\n    if (!key) {\n      this.removeFromStack(current);\n      return;\n    }\n    const index = current.arrayLength - key;\n    const value = current.value[index];\n    /* eslint-disable-next-line no-param-reassign */\n    current.unread -= 1;\n    this.addToStack(value, undefined, index, current);\n  }\n\n  processPrimitive(current) {\n    if (current.value !== undefined) {\n      const type = typeof current.value;\n      let value;\n      switch (type) {\n      case 'string':\n        value = quoteString(current.value);\n        break;\n      case 'number':\n        value = Number.isFinite(current.value) ? String(current.value) : 'null';\n        break;\n      case 'boolean':\n      case 'null':\n        value = String(current.value);\n        break;\n      case 'object':\n        if (!current.value) {\n          value = 'null';\n          break;\n        }\n        /* eslint-disable-next-line no-fallthrough */\n      default:\n        // This should never happen, I can't imagine a situation where this executes.\n        // If you find a way, please open a ticket or PR\n        throw Object.assign(new Error(`Unknown type \"${type}\". Please file an issue!`), {\n          value: current.value,\n        });\n      }\n      this._push(value);\n    } else if (this.stack[1] && (this.stack[1].type === 'Array' || this.stack[1].type === 'ReadableObject')) {\n      this._push('null');\n    } else {\n      /* eslint-disable-next-line no-param-reassign */\n      current.addSeparatorAfterEnd = false;\n    }\n    this.removeFromStack(current);\n  }\n\n  processReadableString(current, size) {\n    if (current.end) {\n      this.removeFromStack(current);\n      return undefined;\n    }\n    return readAsPromised(current.value, size)\n      .then((value) => {\n        if (value) this._push(escapeString(value.toString()));\n      });\n  }\n\n  processPromise(current) {\n    return recursiveResolve(current.value).then((value) => {\n      this.removeFromStack(current);\n      this.addToStack(value, current.key, current.index, current.parent);\n    });\n  }\n\n  processStackTopItem(size) {\n    const current = this.stack[0];\n    if (!current || this.error) return Promise.resolve();\n    let out;\n    try {\n      out = this[`process${current.type}`](current, size);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    return Promise.resolve(out)\n      .then(() => {\n        if (this.stack.length === 0) {\n          this.end = true;\n          this._push(null);\n        }\n      });\n  }\n\n  __read(size) {\n    if (this.isRunning || this.error) {\n      this.readMore = true;\n      return undefined;\n    }\n    this.isRunning = true;\n\n    // we must continue to read while push has not been called\n    this.readMore = false;\n    return this.processStackTopItem(size)\n      .then(() => {\n        const readAgain = !this.end && !this.error && (this.readMore || !this.pushCalled);\n        if (readAgain) {\n          setImmediate(() => {\n            this.isRunning = false;\n            this.__read();\n          });\n        } else {\n          this.isRunning = false;\n        }\n      })\n      .catch((err) => {\n        this.error = true;\n        this.emit('error', err);\n      });\n  }\n\n  _read(size) {\n    this.pushCalled = false;\n    this.__read(size);\n  }\n\n  path() {\n    return this.stack.map(({\n      key,\n      index,\n    }) => key || index).filter(v => v || v > -1).reverse();\n  }\n}\n\nexport default JsonStreamStringify;\n"],"names":["rxEscapable","meta","isReadableStream","value","read","once","removeListener","_readableState","getType","then","objectMode","Array","isArray","Object","stackItemEnd","ReadableString","ReadableObject","stackItemOpen","escapeString","string","replace","a","c","charCodeAt","toString","padStart","quoteString","readAsPromised","stream","size","Promise","resolve","reject","endListener","recursiveResolve","promise","res","resType","JsonStreamStringify","replacer","spaces","cycle","gap","spaceType","Number","isFinite","repeat","assign","visited","WeakMap","WeakSet","stack","replacerFunction","Function","replacerArray","depth","addToStack","key","existingPath","get","$ref","path","undefined","push","map","isInteger","v","set","length","join","index","parent","realValue","toJSON","includes","type","first","_push","cycler","has","Error","add","open","obj","unread","keys","isEmpty","arrayLength","startsWith","ended","emit","flowing","pause","readCount","end","__read","err","error","unshift","item","isObject","delete","stackIndex","indexOf","splice","data","pushCalled","current","removeFromStack","shift","String","addSeparatorAfterEnd","out","isRunning","readMore","processStackTopItem","readAgain","setImmediate","catch","filter","reverse","Readable"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAEA,IAAMA,cAAc,iIAApB;;EAGA,IAAMC,OAAO;EACX,QAAM,KADK;EAEX,QAAM,KAFK;EAGX,QAAM,KAHK;EAIX,QAAM,KAJK;EAKX,QAAM,KALK;EAMX,OAAK,KANM;EAOX,QAAM;EAPK,CAAb;;EAUA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;EAC/B,SAAO,OAAOA,MAAMC,IAAb,KAAsB,UAAtB,IACE,OAAOD,MAAME,IAAb,KAAsB,UADxB,IAEE,OAAOF,MAAMG,cAAb,KAAgC,UAFlC,IAGE,QAAOH,MAAMI,cAAb,MAAgC,QAHzC;EAID;;EAED,SAASC,OAAT,CAAiBL,KAAjB,EAAwB;EACtB,MAAI,CAACA,KAAL,EAAY,OAAO,WAAP;EACZ,MAAI,OAAOA,MAAMM,IAAb,KAAsB,UAA1B,EAAsC,OAAO,SAAP;EACtC,MAAIP,iBAAiBC,KAAjB,CAAJ,EAA6B,yBAAkBA,MAAMI,cAAN,CAAqBG,UAArB,GAAkC,QAAlC,GAA6C,QAA/D;EAC7B,MAAIC,MAAMC,OAAN,CAAcT,KAAd,CAAJ,EAA0B,OAAO,OAAP;EAC1B,MAAI,QAAOA,KAAP,MAAiB,QAAjB,IAA6BA,iBAAiBU,MAAlD,EAA0D,OAAO,QAAP;EAC1D,SAAO,WAAP;EACD;;EAED,IAAMC,eAAe;EACnBH,SAAO,GADY;EAEnBE,UAAQ,GAFW;EAGnBE,kBAAgB,GAHG;EAInBC,kBAAgB;EAJG,CAArB;EAOA,IAAMC,gBAAgB;EACpBN,SAAO,GADa;EAEpBE,UAAQ,GAFY;EAGpBE,kBAAgB,GAHI;EAIpBC,kBAAgB;EAJI,CAAtB;;EAOA,SAASE,YAAT,CAAsBC,MAAtB,EAA8B;EAC5B;EACA;EAEA;EACA;EACA;EACA;EAEA,SAAOA,OAAOC,OAAP,CAAepB,WAAf,EAA4B,UAACqB,CAAD,EAAO;EACxC,QAAMC,IAAIrB,KAAKoB,CAAL,CAAV;EACA,WAAO,OAAOC,CAAP,KAAa,QAAb,GAAwBA,CAAxB,gBAAkCD,EAAEE,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,EAA6BC,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAlC,CAAP;EACD,GAHM,CAAP;EAID;;EAED,SAASC,WAAT,CAAqBP,MAArB,EAA6B;EAC3B,qBAAWD,aAAaC,MAAb,CAAX;EACD;;EAED,SAASQ,cAAT,CAAwBC,SAAxB,EAAgCC,IAAhC,EAAsC;EACpC,MAAM1B,QAAQyB,UAAOxB,IAAP,CAAYyB,IAAZ,CAAd;;EACA,MAAI1B,UAAU,IAAd,EAAoB;EAClB,WAAO,IAAI2B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;EACtC,UAAMC,cAAc,SAAdA,WAAc;EAAA,eAAMF,QAAQ,IAAR,CAAN;EAAA,OAApB;;EACAH,gBAAOvB,IAAP,CAAY,KAAZ,EAAmB4B,WAAnB;EACAL,gBAAOvB,IAAP,CAAY,OAAZ,EAAqB2B,MAArB;EACAJ,gBAAOvB,IAAP,CAAY,UAAZ,EAAwB,YAAM;EAC5BuB,kBAAOtB,cAAP,CAAsB,KAAtB,EAA6B2B,WAA7B;EACAL,kBAAOtB,cAAP,CAAsB,OAAtB,EAA+B0B,MAA/B;EACAD,gBAAQH,UAAOxB,IAAP,EAAR;EACD,OAJD;EAKD,KATM,CAAP;EAUD;;EACD,SAAO0B,QAAQC,OAAR,CAAgB5B,KAAhB,CAAP;EACD;;EAED,SAAS+B,gBAAT,CAA0BC,OAA1B,EAAmC;EACjC,SAAOA,QAAQ1B,IAAR,CAAa,UAAC2B,GAAD,EAAS;EAC3B,QAAMC,UAAU7B,QAAQ4B,GAAR,CAAhB;EACA,WAAOC,YAAY,SAAZ,GAAwBH,iBAAiBE,GAAjB,CAAxB,GAAgDA,GAAvD;EACD,GAHM,CAAP;EAID;;MAEKE;;;;;EACJ,+BAAYnC,KAAZ,EAAmBoC,QAAnB,EAA6BC,MAA7B,EAAqCC,KAArC,EAA4C;EAAA;;EAAA;;EAC1C,6FAAM,EAAN;EACA,QAAIC,GAAJ;;EACA,QAAMC,oBAAmBH,MAAnB,CAAN;;EACA,QAAIG,cAAc,QAAd,IAA0BA,cAAc,QAA5C,EAAsD;EACpDD,YAAME,OAAOC,QAAP,CAAgBL,MAAhB,IAA0B,IAAIM,MAAJ,CAAWN,MAAX,CAA1B,GAA+CA,MAArD;EACD;;EACD3B,WAAOkC,MAAP,wDAAoB;EAClBC,eAASP,QAAQ,IAAIQ,OAAJ,EAAR,GAAwB,IAAIC,OAAJ,EADf;EAElBT,kBAFkB;EAGlBU,aAAO,EAHW;EAIlBC,wBAAkBb,oBAAoBc,QAApB,IAAgCd,QAJhC;EAKlBe,qBAAe3C,MAAMC,OAAN,CAAc2B,QAAd,KAA2BA,QALxB;EAMlBG,cANkB;EAOlBa,aAAO;EAPW,KAApB;;EASA,UAAKC,UAAL,CAAgBrD,KAAhB;;EAhB0C;EAiB3C;;;;6BAEMsD,KAAKtD,OAAO;EACjB,UAAMuD,eAAe,KAAKV,OAAL,CAAaW,GAAb,CAAiBxD,KAAjB,CAArB;;EACA,UAAIuD,YAAJ,EAAkB;EAChB,eAAO;EACLE,gBAAMF;EADD,SAAP;EAGD;;EACD,UAAIG,OAAO,KAAKA,IAAL,EAAX;EACA,UAAIJ,QAAQK,SAAZ,EAAuBD,KAAKE,IAAL,CAAUN,GAAV;EACvBI,aAAOA,KAAKG,GAAL,CAAS;EAAA,0BAAUpB,OAAOqB,SAAP,CAAiBC,CAAjB,IAAsBA,CAAtB,GAA0BxC,YAAYwC,CAAZ,CAApC;EAAA,OAAT,CAAP;EACA,WAAKlB,OAAL,CAAamB,GAAb,CAAiBhE,KAAjB,EAAwB0D,KAAKO,MAAL,cAAkBP,KAAKQ,IAAL,CAAU,EAAV,CAAlB,IAAoC,GAA5D;EACA,aAAOlE,KAAP;EACD;;;iCAEUA,OAAOsD,KAAKa,OAAOC,QAAQ;EAAA;;EACpC,UAAIC,YAAYrE,KAAhB;;EACA,UAAI,KAAKiD,gBAAT,EAA2B;EACzBoB,oBAAY,KAAKpB,gBAAL,CAAsBK,OAAOa,KAA7B,EAAoCE,SAApC,EAA+C,IAA/C,CAAZ;EACD,OAJmC;;;EAMpC,UAAIA,aAAaA,UAAUC,MAAV,YAA4BpB,QAA7C,EAAuD;EACrDmB,oBAAYA,UAAUC,MAAV,EAAZ;EACD;;EACD,UAAID,qBAAqBnB,QAArB,IAAiC,QAAOlD,KAAP,MAAiB,QAAtD,EAAgE;EAC9DqE,oBAAYV,SAAZ;EACD;;EACD,UAAIL,QAAQK,SAAR,IAAqB,KAAKR,aAA9B,EAA6C;EAC3C,YAAI,CAAC,KAAKA,aAAL,CAAmBoB,QAAnB,CAA4BjB,GAA5B,CAAL,EAAuC;EACrCe,sBAAYV,SAAZ;EACD;EACF;;EACD,UAAIa,OAAOnE,QAAQgE,SAAR,CAAX;;EACA,UAAI,CAAED,UAAUA,OAAOI,IAAP,KAAgB,OAA3B,GAAsC,IAAtC,GAA6CH,cAAcV,SAA5D,KAA0Ea,SAAS,SAAvF,EAAkG;EAChG,YAAIJ,UAAU,CAACA,OAAOK,KAAtB,EAA6B;EAC3B,eAAKC,KAAL,CAAW,GAAX;EACD;EACD;;;EACA,YAAIN,MAAJ,EAAYA,OAAOK,KAAP,GAAe,KAAf;EACb;;EACD,UAAIJ,cAAcV,SAAd,IAA2Ba,SAAS,SAApC,IAAiDlB,GAArD,EAA0D;EACxD,YAAI,KAAKf,GAAT,EAAc;EACZ,eAAKmC,KAAL,aAAgB,KAAKnC,GAAL,CAASI,MAAT,CAAgB,KAAKS,KAArB,CAAhB,eAA+CrC,aAAauC,GAAb,CAA/C;EACD,SAFD,MAEO;EACL,eAAKoB,KAAL,aAAe3D,aAAauC,GAAb,CAAf;EACD;EACF;;EACD,UAAIkB,SAAS,WAAb,EAA0B;EACxB,YAAI,KAAKlC,KAAT,EAAgB;EACd;EACA+B,sBAAY,KAAKM,MAAL,CAAYrB,OAAOa,KAAnB,EAA0BE,SAA1B,CAAZ;EACAG,iBAAOnE,QAAQgE,SAAR,CAAP;EACD,SAJD,MAIO;EACL;EACA,cAAI,KAAKxB,OAAL,CAAa+B,GAAb,CAAiBP,SAAjB,CAAJ,EAAiC;EAC/B,kBAAM3D,OAAOkC,MAAP,CAAc,IAAIiC,KAAJ,CAAU,uCAAV,CAAd,EAAkE;EACtER,kCADsE;EAEtEf,mBAAKA,OAAOa;EAF0D,aAAlE,CAAN;EAID;;EACD,eAAKtB,OAAL,CAAaiC,GAAb,CAAiBT,SAAjB;EACD;EACF;;EAED,UAAI,CAACf,GAAD,IAAQa,QAAQ,CAAC,CAAjB,IAAsB,KAAKf,KAA3B,IAAoC,KAAKb,GAA7C,EAAkD,KAAKmC,KAAL,aAAgB,KAAKnC,GAAL,CAASI,MAAT,CAAgB,KAAKS,KAArB,CAAhB;EAElD,UAAM2B,OAAOjE,cAAc0D,IAAd,CAAb;EACA,UAAIO,IAAJ,EAAU,KAAKL,KAAL,CAAWK,IAAX;EAEV,UAAMC,MAAM;EACV1B,gBADU;EAEVa,oBAFU;EAGVK,kBAHU;EAIVxE,eAAOqE,SAJG;EAKVD,sBALU;EAMVK,eAAO;EANG,OAAZ;;EASA,UAAID,SAAS,QAAb,EAAuB;EACrB,aAAKpB,KAAL,IAAc,CAAd;EACA4B,YAAIC,MAAJ,GAAavE,OAAOwE,IAAP,CAAYb,SAAZ,CAAb;EACAW,YAAIG,OAAJ,GAAc,CAACH,IAAIC,MAAJ,CAAWhB,MAA1B;EACD,OAJD,MAIO,IAAIO,SAAS,OAAb,EAAsB;EAC3B,aAAKpB,KAAL,IAAc,CAAd;EACA4B,YAAIC,MAAJ,GAAaZ,UAAUJ,MAAvB;EACAe,YAAII,WAAJ,GAAkBJ,IAAIC,MAAtB;EACAD,YAAIG,OAAJ,GAAc,CAACH,IAAIC,MAAnB;EACD,OALM,MAKA,IAAIT,KAAKa,UAAL,CAAgB,UAAhB,CAAJ,EAAiC;EACtC,aAAKjC,KAAL,IAAc,CAAd;;EACA,YAAIiB,UAAUjE,cAAV,CAAyBkF,KAA7B,EAAoC;EAClC,eAAKC,IAAL,CAAU,OAAV,EAAmB,IAAIV,KAAJ,CAAU,oFAAV,CAAnB,EAAoHR,SAApH,EAA+Hf,OAAOa,KAAtI;EACD,SAFD,MAEO,IAAIE,UAAUjE,cAAV,CAAyBoF,OAA7B,EAAsC;EAC3CnB,oBAAUoB,KAAV;EACA,eAAKF,IAAL,CAAU,OAAV,EAAmB,IAAIV,KAAJ,CAAU,sFAAV,CAAnB,EAAsHR,SAAtH,EAAiIf,OAAOa,KAAxI;EACD;;EACDa,YAAIU,SAAJ,GAAgB,CAAhB;EACArB,kBAAUnE,IAAV,CAAe,KAAf,EAAsB,YAAM;EAC1B8E,cAAIW,GAAJ,GAAU,IAAV;;EACA,iBAAKC,MAAL;EACD,SAHD;EAIAvB,kBAAUnE,IAAV,CAAe,OAAf,EAAwB,UAAC2F,GAAD,EAAS;EAC/B,iBAAKC,KAAL,GAAa,IAAb;;EACA,iBAAKP,IAAL,CAAU,OAAV,EAAmBM,GAAnB;EACD,SAHD;EAID;;EACD,WAAK7C,KAAL,CAAW+C,OAAX,CAAmBf,GAAnB;EACA,aAAOA,GAAP;EACD;;;sCAEegB,MAAM;EAAA,UAElBxB,IAFkB,GAGhBwB,IAHgB,CAElBxB,IAFkB;EAIpB,UAAMyB,WAAWzB,SAAS,QAAT,IAAqBA,SAAS,OAA9B,IAAyCA,KAAKa,UAAL,CAAgB,UAAhB,CAA1D;;EACA,UAAIb,SAAS,WAAb,EAA0B;EACxB,YAAI,CAAC,KAAKlC,KAAV,EAAiB;EACf,eAAKO,OAAL,CAAaqD,MAAb,CAAoBF,KAAKhG,KAAzB;EACD;;EACD,YAAIiG,QAAJ,EAAc;EACZ,eAAK7C,KAAL,IAAc,CAAd;EACD;EACF;;EAED,UAAMuC,MAAMhF,aAAa6D,IAAb,CAAZ;EACA,UAAIyB,YAAY,CAACD,KAAKb,OAAlB,IAA6B,KAAK5C,GAAtC,EAA2C,KAAKmC,KAAL,aAAgB,KAAKnC,GAAL,CAASI,MAAT,CAAgB,KAAKS,KAArB,CAAhB;EAC3C,UAAIuC,GAAJ,EAAS,KAAKjB,KAAL,CAAWiB,GAAX;EACT,UAAMQ,aAAa,KAAKnD,KAAL,CAAWoD,OAAX,CAAmBJ,IAAnB,CAAnB;EACA,WAAKhD,KAAL,CAAWqD,MAAX,CAAkBF,UAAlB,EAA8B,CAA9B;EACD;;;4BAEKG,MAAM;EACV,WAAKC,UAAL,GAAkB,IAAlB;EACA,WAAK3C,IAAL,CAAU0C,IAAV;EACD;;;4CAEqBE,SAAS9E,MAAM;EAAA;;EACnC,UAAI8E,QAAQb,GAAZ,EAAiB;EACf,aAAKc,eAAL,CAAqBD,OAArB;EACA,eAAO7C,SAAP;EACD;;EACD,aAAOnC,eAAegF,QAAQxG,KAAvB,EAA8B0B,IAA9B,EACJpB,IADI,CACC,UAACN,KAAD,EAAW;EACf,YAAIA,UAAU,IAAd,EAAoB;EAClB,cAAI,CAACwG,QAAQ/B,KAAb,EAAoB;EAClB,mBAAKC,KAAL,CAAW,GAAX;EACD;EACD;;;EACA8B,kBAAQ/B,KAAR,GAAgB,KAAhB;;EACA,iBAAKpB,UAAL,CAAgBrD,KAAhB,EAAuB2D,SAAvB,EAAkC6C,QAAQd,SAA1C;;EACAc,kBAAQd,SAAR,IAAqB,CAArB;EACA;EACD;EACF,OAZI,CAAP;EAaD;;;oCAEac,SAAS;EACrB;EACA,UAAI,CAACA,QAAQvB,MAAR,CAAehB,MAApB,EAA4B;EAC1B,aAAKwC,eAAL,CAAqBD,OAArB;EACA;EACD;;EACD,UAAMlD,MAAMkD,QAAQvB,MAAR,CAAeyB,KAAf,EAAZ;EACA,UAAM1G,QAAQwG,QAAQxG,KAAR,CAAcsD,GAAd,CAAd;EACA,WAAKD,UAAL,CAAgBrD,KAAhB,EAAuBsD,GAAvB,EAA4BK,SAA5B,EAAuC6C,OAAvC;EACD;;;mCAEYA,SAAS;EACpB,UAAMlD,MAAMkD,QAAQvB,MAApB;;EACA,UAAI,CAAC3B,GAAL,EAAU;EACR,aAAKmD,eAAL,CAAqBD,OAArB;EACA;EACD;;EACD,UAAMrC,QAAQqC,QAAQpB,WAAR,GAAsB9B,GAApC;EACA,UAAMtD,QAAQwG,QAAQxG,KAAR,CAAcmE,KAAd,CAAd;EACA;;EACAqC,cAAQvB,MAAR,IAAkB,CAAlB;EACA,WAAK5B,UAAL,CAAgBrD,KAAhB,EAAuB2D,SAAvB,EAAkCQ,KAAlC,EAAyCqC,OAAzC;EACD;;;uCAEgBA,SAAS;EACxB,UAAIA,QAAQxG,KAAR,KAAkB2D,SAAtB,EAAiC;EAC/B,YAAMa,eAAcgC,QAAQxG,KAAtB,CAAN;;EACA,YAAIA,KAAJ;;EACA,gBAAQwE,IAAR;EACA,eAAK,QAAL;EACExE,oBAAQuB,YAAYiF,QAAQxG,KAApB,CAAR;EACA;;EACF,eAAK,QAAL;EACEA,oBAAQyC,OAAOC,QAAP,CAAgB8D,QAAQxG,KAAxB,IAAiC2G,OAAOH,QAAQxG,KAAf,CAAjC,GAAyD,MAAjE;EACA;;EACF,eAAK,SAAL;EACA,eAAK,MAAL;EACEA,oBAAQ2G,OAAOH,QAAQxG,KAAf,CAAR;EACA;;EACF,eAAK,QAAL;EACE,gBAAI,CAACwG,QAAQxG,KAAb,EAAoB;EAClBA,sBAAQ,MAAR;EACA;EACD;;EACD;;EACF;EACE;EACA;EACA,kBAAMU,OAAOkC,MAAP,CAAc,IAAIiC,KAAJ,0BAA2BL,IAA3B,+BAAd,EAA0E;EAC9ExE,qBAAOwG,QAAQxG;EAD+D,aAA1E,CAAN;EApBF;;EAwBA,aAAK0E,KAAL,CAAW1E,KAAX;EACD,OA5BD,MA4BO,IAAI,KAAKgD,KAAL,CAAW,CAAX,MAAkB,KAAKA,KAAL,CAAW,CAAX,EAAcwB,IAAd,KAAuB,OAAvB,IAAkC,KAAKxB,KAAL,CAAW,CAAX,EAAcwB,IAAd,KAAuB,gBAA3E,CAAJ,EAAkG;EACvG,aAAKE,KAAL,CAAW,MAAX;EACD,OAFM,MAEA;EACL;EACA8B,gBAAQI,oBAAR,GAA+B,KAA/B;EACD;;EACD,WAAKH,eAAL,CAAqBD,OAArB;EACD;;;4CAEqBA,SAAS9E,MAAM;EAAA;;EACnC,UAAI8E,QAAQb,GAAZ,EAAiB;EACf,aAAKc,eAAL,CAAqBD,OAArB;EACA,eAAO7C,SAAP;EACD;;EACD,aAAOnC,eAAegF,QAAQxG,KAAvB,EAA8B0B,IAA9B,EACJpB,IADI,CACC,UAACN,KAAD,EAAW;EACf,YAAIA,KAAJ,EAAW,OAAK0E,KAAL,CAAW3D,aAAaf,MAAMqB,QAAN,EAAb,CAAX;EACZ,OAHI,CAAP;EAID;;;qCAEcmF,SAAS;EAAA;;EACtB,aAAOzE,iBAAiByE,QAAQxG,KAAzB,EAAgCM,IAAhC,CAAqC,UAACN,KAAD,EAAW;EACrD,eAAKyG,eAAL,CAAqBD,OAArB;;EACA,eAAKnD,UAAL,CAAgBrD,KAAhB,EAAuBwG,QAAQlD,GAA/B,EAAoCkD,QAAQrC,KAA5C,EAAmDqC,QAAQpC,MAA3D;EACD,OAHM,CAAP;EAID;;;0CAEmB1C,MAAM;EAAA;;EACxB,UAAM8E,UAAU,KAAKxD,KAAL,CAAW,CAAX,CAAhB;EACA,UAAI,CAACwD,OAAD,IAAY,KAAKV,KAArB,EAA4B,OAAOnE,QAAQC,OAAR,EAAP;EAC5B,UAAIiF,GAAJ;;EACA,UAAI;EACFA,cAAM,sBAAeL,QAAQhC,IAAvB,GAA+BgC,OAA/B,EAAwC9E,IAAxC,CAAN;EACD,OAFD,CAEE,OAAOmE,GAAP,EAAY;EACZ,eAAOlE,QAAQE,MAAR,CAAegE,GAAf,CAAP;EACD;;EACD,aAAOlE,QAAQC,OAAR,CAAgBiF,GAAhB,EACJvG,IADI,CACC,YAAM;EACV,YAAI,OAAK0C,KAAL,CAAWiB,MAAX,KAAsB,CAA1B,EAA6B;EAC3B,iBAAK0B,GAAL,GAAW,IAAX;;EACA,iBAAKjB,KAAL,CAAW,IAAX;EACD;EACF,OANI,CAAP;EAOD;;;6BAEMhD,MAAM;EAAA;;EACX,UAAI,KAAKoF,SAAL,IAAkB,KAAKhB,KAA3B,EAAkC;EAChC,aAAKiB,QAAL,GAAgB,IAAhB;EACA,eAAOpD,SAAP;EACD;;EACD,WAAKmD,SAAL,GAAiB,IAAjB,CALW;;EAQX,WAAKC,QAAL,GAAgB,KAAhB;EACA,aAAO,KAAKC,mBAAL,CAAyBtF,IAAzB,EACJpB,IADI,CACC,YAAM;EACV,YAAM2G,YAAY,CAAC,OAAKtB,GAAN,IAAa,CAAC,OAAKG,KAAnB,KAA6B,OAAKiB,QAAL,IAAiB,CAAC,OAAKR,UAApD,CAAlB;;EACA,YAAIU,SAAJ,EAAe;EACbC,uBAAa,YAAM;EACjB,mBAAKJ,SAAL,GAAiB,KAAjB;;EACA,mBAAKlB,MAAL;EACD,WAHD;EAID,SALD,MAKO;EACL,iBAAKkB,SAAL,GAAiB,KAAjB;EACD;EACF,OAXI,EAYJK,KAZI,CAYE,UAACtB,GAAD,EAAS;EACd,eAAKC,KAAL,GAAa,IAAb;;EACA,eAAKP,IAAL,CAAU,OAAV,EAAmBM,GAAnB;EACD,OAfI,CAAP;EAgBD;;;4BAEKnE,MAAM;EACV,WAAK6E,UAAL,GAAkB,KAAlB;;EACA,WAAKX,MAAL,CAAYlE,IAAZ;EACD;;;6BAEM;EACL,aAAO,KAAKsB,KAAL,CAAWa,GAAX,CAAe;EAAA,YACpBP,GADoB,QACpBA,GADoB;EAAA,YAEpBa,KAFoB,QAEpBA,KAFoB;EAAA,eAGhBb,OAAOa,KAHS;EAAA,OAAf,EAGaiD,MAHb,CAGoB;EAAA,eAAKrD,KAAKA,IAAI,CAAC,CAAf;EAAA,OAHpB,EAGsCsD,OAHtC,EAAP;EAID;;;;IArT+BC;;;;;;;;"}
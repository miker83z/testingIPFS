{"version":3,"file":"module.polyfill.js","sources":["../src/JsonStreamStringify.js"],"sourcesContent":["import { Readable } from 'stream';\n\nconst rxEscapable = /[\\\\\"\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n\n// table of character substitutions\nconst meta = {\n  '\\b': '\\\\b',\n  '\\t': '\\\\t',\n  '\\n': '\\\\n',\n  '\\f': '\\\\f',\n  '\\r': '\\\\r',\n  '\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n};\n\nfunction isReadableStream(value) {\n  return typeof value.read === 'function'\n        && typeof value.once === 'function'\n        && typeof value.removeListener === 'function'\n        && typeof value._readableState === 'object';\n}\n\nfunction getType(value) {\n  if (!value) return 'Primitive';\n  if (typeof value.then === 'function') return 'Promise';\n  if (isReadableStream(value)) return `Readable${value._readableState.objectMode ? 'Object' : 'String'}`;\n  if (Array.isArray(value)) return 'Array';\n  if (typeof value === 'object' || value instanceof Object) return 'Object';\n  return 'Primitive';\n}\n\nconst stackItemEnd = {\n  Array: ']',\n  Object: '}',\n  ReadableString: '\"',\n  ReadableObject: ']',\n};\n\nconst stackItemOpen = {\n  Array: '[',\n  Object: '{',\n  ReadableString: '\"',\n  ReadableObject: '[',\n};\n\nfunction escapeString(string) {\n  // Modified code, original code by Douglas Crockford\n  // Original: https://github.com/douglascrockford/JSON-js/blob/master/json2.js\n\n  // If the string contains no control characters, no quote characters, and no\n  // backslash characters, then we can safely slap some quotes around it.\n  // Otherwise we must also replace the offending characters with safe escape\n  // sequences.\n\n  return string.replace(rxEscapable, (a) => {\n    const c = meta[a];\n    return typeof c === 'string' ? c : `\\\\u${a.charCodeAt(0).toString(16).padStart(4, '0')}`;\n  });\n}\n\nfunction quoteString(string) {\n  return `\"${escapeString(string)}\"`;\n}\n\nfunction readAsPromised(stream, size) {\n  const value = stream.read(size);\n  if (value === null) {\n    return new Promise((resolve, reject) => {\n      const endListener = () => resolve(null);\n      stream.once('end', endListener);\n      stream.once('error', reject);\n      stream.once('readable', () => {\n        stream.removeListener('end', endListener);\n        stream.removeListener('error', reject);\n        resolve(stream.read());\n      });\n    });\n  }\n  return Promise.resolve(value);\n}\n\nfunction recursiveResolve(promise) {\n  return promise.then((res) => {\n    const resType = getType(res);\n    return resType === 'Promise' ? recursiveResolve(res) : res;\n  });\n}\n\nclass JsonStreamStringify extends Readable {\n  constructor(value, replacer, spaces, cycle) {\n    super({});\n    let gap;\n    const spaceType = typeof spaces;\n    if (spaceType === 'string' || spaceType === 'number') {\n      gap = Number.isFinite(spaces) ? ' '.repeat(spaces) : spaces;\n    }\n    Object.assign(this, {\n      visited: cycle ? new WeakMap() : new WeakSet(),\n      cycle,\n      stack: [],\n      replacerFunction: replacer instanceof Function && replacer,\n      replacerArray: Array.isArray(replacer) && replacer,\n      gap,\n      depth: 0,\n    });\n    this.addToStack(value);\n  }\n\n  cycler(key, value) {\n    const existingPath = this.visited.get(value);\n    if (existingPath) {\n      return {\n        $ref: existingPath,\n      };\n    }\n    let path = this.path();\n    if (key !== undefined) path.push(key);\n    path = path.map(v => `[${(Number.isInteger(v) ? v : quoteString(v))}]`);\n    this.visited.set(value, path.length ? `$${path.join('')}` : '$');\n    return value;\n  }\n\n  addToStack(value, key, index, parent) {\n    let realValue = value;\n    if (this.replacerFunction) {\n      realValue = this.replacerFunction(key || index, realValue, this);\n    }\n    // ORDER?\n    if (realValue && realValue.toJSON instanceof Function) {\n      realValue = realValue.toJSON();\n    }\n    if (realValue instanceof Function || typeof value === 'symbol') {\n      realValue = undefined;\n    }\n    if (key !== undefined && this.replacerArray) {\n      if (!this.replacerArray.includes(key)) {\n        realValue = undefined;\n      }\n    }\n    let type = getType(realValue);\n    if (((parent && parent.type === 'Array') ? true : realValue !== undefined) && type !== 'Promise') {\n      if (parent && !parent.first) {\n        this._push(',');\n      }\n      /* eslint-disable-next-line no-param-reassign */\n      if (parent) parent.first = false;\n    }\n    if (realValue !== undefined && type !== 'Promise' && key) {\n      if (this.gap) {\n        this._push(`\\n${this.gap.repeat(this.depth)}\"${escapeString(key)}\": `);\n      } else {\n        this._push(`\"${escapeString(key)}\":`);\n      }\n    }\n    if (type !== 'Primitive') {\n      if (this.cycle) {\n        // run cycler\n        realValue = this.cycler(key || index, realValue);\n        type = getType(realValue);\n      } else {\n        // check for circular structure\n        if (this.visited.has(realValue)) {\n          throw Object.assign(new Error('Converting circular structure to JSON'), {\n            realValue,\n            key: key || index,\n          });\n        }\n        this.visited.add(realValue);\n      }\n    }\n\n    if (!key && index > -1 && this.depth && this.gap) this._push(`\\n${this.gap.repeat(this.depth)}`);\n\n    const open = stackItemOpen[type];\n    if (open) this._push(open);\n\n    const obj = {\n      key,\n      index,\n      type,\n      value: realValue,\n      parent,\n      first: true,\n    };\n\n    if (type === 'Object') {\n      this.depth += 1;\n      obj.unread = Object.keys(realValue);\n      obj.isEmpty = !obj.unread.length;\n    } else if (type === 'Array') {\n      this.depth += 1;\n      obj.unread = realValue.length;\n      obj.arrayLength = obj.unread;\n      obj.isEmpty = !obj.unread;\n    } else if (type.startsWith('Readable')) {\n      this.depth += 1;\n      if (realValue._readableState.ended) {\n        this.emit('error', new Error('Readable Stream has ended before it was serialized. All stream data have been lost'), realValue, key || index);\n      } else if (realValue._readableState.flowing) {\n        realValue.pause();\n        this.emit('error', new Error('Readable Stream is in flowing mode, data may have been lost. Trying to pause stream.'), realValue, key || index);\n      }\n      obj.readCount = 0;\n      realValue.once('end', () => {\n        obj.end = true;\n        this.__read();\n      });\n      realValue.once('error', (err) => {\n        this.error = true;\n        this.emit('error', err);\n      });\n    }\n    this.stack.unshift(obj);\n    return obj;\n  }\n\n  removeFromStack(item) {\n    const {\n      type,\n    } = item;\n    const isObject = type === 'Object' || type === 'Array' || type.startsWith('Readable');\n    if (type !== 'Primitive') {\n      if (!this.cycle) {\n        this.visited.delete(item.value);\n      }\n      if (isObject) {\n        this.depth -= 1;\n      }\n    }\n\n    const end = stackItemEnd[type];\n    if (isObject && !item.isEmpty && this.gap) this._push(`\\n${this.gap.repeat(this.depth)}`);\n    if (end) this._push(end);\n    const stackIndex = this.stack.indexOf(item);\n    this.stack.splice(stackIndex, 1);\n  }\n\n  _push(data) {\n    this.pushCalled = true;\n    this.push(data);\n  }\n\n  processReadableObject(current, size) {\n    if (current.end) {\n      this.removeFromStack(current);\n      return undefined;\n    }\n    return readAsPromised(current.value, size)\n      .then((value) => {\n        if (value !== null) {\n          if (!current.first) {\n            this._push(',');\n          }\n          /* eslint-disable no-param-reassign */\n          current.first = false;\n          this.addToStack(value, undefined, current.readCount);\n          current.readCount += 1;\n          /* eslint-enable no-param-reassign */\n        }\n      });\n  }\n\n  processObject(current) {\n    // when no keys left, remove obj from stack\n    if (!current.unread.length) {\n      this.removeFromStack(current);\n      return;\n    }\n    const key = current.unread.shift();\n    const value = current.value[key];\n    this.addToStack(value, key, undefined, current);\n  }\n\n  processArray(current) {\n    const key = current.unread;\n    if (!key) {\n      this.removeFromStack(current);\n      return;\n    }\n    const index = current.arrayLength - key;\n    const value = current.value[index];\n    /* eslint-disable-next-line no-param-reassign */\n    current.unread -= 1;\n    this.addToStack(value, undefined, index, current);\n  }\n\n  processPrimitive(current) {\n    if (current.value !== undefined) {\n      const type = typeof current.value;\n      let value;\n      switch (type) {\n      case 'string':\n        value = quoteString(current.value);\n        break;\n      case 'number':\n        value = Number.isFinite(current.value) ? String(current.value) : 'null';\n        break;\n      case 'boolean':\n      case 'null':\n        value = String(current.value);\n        break;\n      case 'object':\n        if (!current.value) {\n          value = 'null';\n          break;\n        }\n        /* eslint-disable-next-line no-fallthrough */\n      default:\n        // This should never happen, I can't imagine a situation where this executes.\n        // If you find a way, please open a ticket or PR\n        throw Object.assign(new Error(`Unknown type \"${type}\". Please file an issue!`), {\n          value: current.value,\n        });\n      }\n      this._push(value);\n    } else if (this.stack[1] && (this.stack[1].type === 'Array' || this.stack[1].type === 'ReadableObject')) {\n      this._push('null');\n    } else {\n      /* eslint-disable-next-line no-param-reassign */\n      current.addSeparatorAfterEnd = false;\n    }\n    this.removeFromStack(current);\n  }\n\n  processReadableString(current, size) {\n    if (current.end) {\n      this.removeFromStack(current);\n      return undefined;\n    }\n    return readAsPromised(current.value, size)\n      .then((value) => {\n        if (value) this._push(escapeString(value.toString()));\n      });\n  }\n\n  processPromise(current) {\n    return recursiveResolve(current.value).then((value) => {\n      this.removeFromStack(current);\n      this.addToStack(value, current.key, current.index, current.parent);\n    });\n  }\n\n  processStackTopItem(size) {\n    const current = this.stack[0];\n    if (!current || this.error) return Promise.resolve();\n    let out;\n    try {\n      out = this[`process${current.type}`](current, size);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    return Promise.resolve(out)\n      .then(() => {\n        if (this.stack.length === 0) {\n          this.end = true;\n          this._push(null);\n        }\n      });\n  }\n\n  __read(size) {\n    if (this.isRunning || this.error) {\n      this.readMore = true;\n      return undefined;\n    }\n    this.isRunning = true;\n\n    // we must continue to read while push has not been called\n    this.readMore = false;\n    return this.processStackTopItem(size)\n      .then(() => {\n        const readAgain = !this.end && !this.error && (this.readMore || !this.pushCalled);\n        if (readAgain) {\n          setImmediate(() => {\n            this.isRunning = false;\n            this.__read();\n          });\n        } else {\n          this.isRunning = false;\n        }\n      })\n      .catch((err) => {\n        this.error = true;\n        this.emit('error', err);\n      });\n  }\n\n  _read(size) {\n    this.pushCalled = false;\n    this.__read(size);\n  }\n\n  path() {\n    return this.stack.map(({\n      key,\n      index,\n    }) => key || index).filter(v => v || v > -1).reverse();\n  }\n}\n\nexport default JsonStreamStringify;\n"],"names":["rxEscapable","meta","isReadableStream","value","read","once","removeListener","_readableState","getType","then","objectMode","Array","isArray","Object","stackItemEnd","stackItemOpen","escapeString","string","replace","a","c","charCodeAt","toString","padStart","quoteString","readAsPromised","stream","size","resolve","reject","endListener","recursiveResolve","promise","res","resType","JsonStreamStringify","replacer","spaces","cycle","gap","spaceType","repeat","Function","addToStack","key","existingPath","visited","get","path","undefined","push","map","v","set","length","join","index","parent","realValue","replacerFunction","toJSON","replacerArray","includes","type","first","_push","depth","cycler","has","Error","add","open","obj","unread","isEmpty","arrayLength","startsWith","ended","emit","flowing","pause","readCount","end","__read","err","error","stack","unshift","item","isObject","delete","stackIndex","indexOf","splice","data","pushCalled","current","removeFromStack","shift","String","addSeparatorAfterEnd","out","isRunning","readMore","processStackTopItem","readAgain","catch","filter","reverse","Readable"],"mappings":"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"}